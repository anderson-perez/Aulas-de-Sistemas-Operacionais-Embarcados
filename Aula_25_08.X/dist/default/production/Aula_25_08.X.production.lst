

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Aug 27 07:58:39 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    21   000000                     
    22                           ; Generated 17/01/2025 GMT
    23                           ; 
    24                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000FE0                     bsr             equ	4064
    57   000FE9                     fsr0            equ	4073
    58   000FEA                     fsr0h           equ	4074
    59   000FE9                     fsr0l           equ	4073
    60   000FE1                     fsr1            equ	4065
    61   000FE2                     fsr1h           equ	4066
    62   000FE1                     fsr1l           equ	4065
    63   000FD9                     fsr2            equ	4057
    64   000FDA                     fsr2h           equ	4058
    65   000FD9                     fsr2l           equ	4057
    66   000FEF                     indf0           equ	4079
    67   000FE7                     indf1           equ	4071
    68   000FDF                     indf2           equ	4063
    69   000FF2                     intcon          equ	4082
    70   000000                     nvmcon          equ	0
    71   000FF9                     pcl             equ	4089
    72   000FFA                     pclath          equ	4090
    73   000FFB                     pclatu          equ	4091
    74   000FEB                     plusw0          equ	4075
    75   000FE3                     plusw1          equ	4067
    76   000FDB                     plusw2          equ	4059
    77   000FED                     postdec0        equ	4077
    78   000FE5                     postdec1        equ	4069
    79   000FDD                     postdec2        equ	4061
    80   000FEE                     postinc0        equ	4078
    81   000FE6                     postinc1        equ	4070
    82   000FDE                     postinc2        equ	4062
    83   000FEC                     preinc0         equ	4076
    84   000FE4                     preinc1         equ	4068
    85   000FDC                     preinc2         equ	4060
    86   000FF3                     prod            equ	4083
    87   000FF4                     prodh           equ	4084
    88   000FF3                     prodl           equ	4083
    89   000FD8                     status          equ	4056
    90   000FF5                     tablat          equ	4085
    91   000FF6                     tblptr          equ	4086
    92   000FF7                     tblptrh         equ	4087
    93   000FF6                     tblptrl         equ	4086
    94   000FF8                     tblptru         equ	4088
    95   000FFD                     tosl            equ	4093
    96   000FE8                     wreg            equ	4072
    97   000F62                     SPPDATA         equ	3938	;# 
    98   000F63                     SPPCFG          equ	3939	;# 
    99   000F64                     SPPEPS          equ	3940	;# 
   100   000F65                     SPPCON          equ	3941	;# 
   101   000F66                     UFRM            equ	3942	;# 
   102   000F66                     UFRML           equ	3942	;# 
   103   000F67                     UFRMH           equ	3943	;# 
   104   000F68                     UIR             equ	3944	;# 
   105   000F69                     UIE             equ	3945	;# 
   106   000F6A                     UEIR            equ	3946	;# 
   107   000F6B                     UEIE            equ	3947	;# 
   108   000F6C                     USTAT           equ	3948	;# 
   109   000F6D                     UCON            equ	3949	;# 
   110   000F6E                     UADDR           equ	3950	;# 
   111   000F6F                     UCFG            equ	3951	;# 
   112   000F70                     UEP0            equ	3952	;# 
   113   000F71                     UEP1            equ	3953	;# 
   114   000F72                     UEP2            equ	3954	;# 
   115   000F73                     UEP3            equ	3955	;# 
   116   000F74                     UEP4            equ	3956	;# 
   117   000F75                     UEP5            equ	3957	;# 
   118   000F76                     UEP6            equ	3958	;# 
   119   000F77                     UEP7            equ	3959	;# 
   120   000F78                     UEP8            equ	3960	;# 
   121   000F79                     UEP9            equ	3961	;# 
   122   000F7A                     UEP10           equ	3962	;# 
   123   000F7B                     UEP11           equ	3963	;# 
   124   000F7C                     UEP12           equ	3964	;# 
   125   000F7D                     UEP13           equ	3965	;# 
   126   000F7E                     UEP14           equ	3966	;# 
   127   000F7F                     UEP15           equ	3967	;# 
   128   000F80                     PORTA           equ	3968	;# 
   129   000F81                     PORTB           equ	3969	;# 
   130   000F82                     PORTC           equ	3970	;# 
   131   000F83                     PORTD           equ	3971	;# 
   132   000F84                     PORTE           equ	3972	;# 
   133   000F89                     LATA            equ	3977	;# 
   134   000F8A                     LATB            equ	3978	;# 
   135   000F8B                     LATC            equ	3979	;# 
   136   000F8C                     LATD            equ	3980	;# 
   137   000F8D                     LATE            equ	3981	;# 
   138   000F92                     TRISA           equ	3986	;# 
   139   000F92                     DDRA            equ	3986	;# 
   140   000F93                     TRISB           equ	3987	;# 
   141   000F93                     DDRB            equ	3987	;# 
   142   000F94                     TRISC           equ	3988	;# 
   143   000F94                     DDRC            equ	3988	;# 
   144   000F95                     TRISD           equ	3989	;# 
   145   000F95                     DDRD            equ	3989	;# 
   146   000F96                     TRISE           equ	3990	;# 
   147   000F96                     DDRE            equ	3990	;# 
   148   000F9B                     OSCTUNE         equ	3995	;# 
   149   000F9D                     PIE1            equ	3997	;# 
   150   000F9E                     PIR1            equ	3998	;# 
   151   000F9F                     IPR1            equ	3999	;# 
   152   000FA0                     PIE2            equ	4000	;# 
   153   000FA1                     PIR2            equ	4001	;# 
   154   000FA2                     IPR2            equ	4002	;# 
   155   000FA6                     EECON1          equ	4006	;# 
   156   000FA7                     EECON2          equ	4007	;# 
   157   000FA8                     EEDATA          equ	4008	;# 
   158   000FA9                     EEADR           equ	4009	;# 
   159   000FAB                     RCSTA           equ	4011	;# 
   160   000FAB                     RCSTA1          equ	4011	;# 
   161   000FAC                     TXSTA           equ	4012	;# 
   162   000FAC                     TXSTA1          equ	4012	;# 
   163   000FAD                     TXREG           equ	4013	;# 
   164   000FAD                     TXREG1          equ	4013	;# 
   165   000FAE                     RCREG           equ	4014	;# 
   166   000FAE                     RCREG1          equ	4014	;# 
   167   000FAF                     SPBRG           equ	4015	;# 
   168   000FAF                     SPBRG1          equ	4015	;# 
   169   000FB0                     SPBRGH          equ	4016	;# 
   170   000FB1                     T3CON           equ	4017	;# 
   171   000FB2                     TMR3            equ	4018	;# 
   172   000FB2                     TMR3L           equ	4018	;# 
   173   000FB3                     TMR3H           equ	4019	;# 
   174   000FB4                     CMCON           equ	4020	;# 
   175   000FB5                     CVRCON          equ	4021	;# 
   176   000FB6                     ECCP1AS         equ	4022	;# 
   177   000FB6                     CCP1AS          equ	4022	;# 
   178   000FB7                     ECCP1DEL        equ	4023	;# 
   179   000FB7                     CCP1DEL         equ	4023	;# 
   180   000FB8                     BAUDCON         equ	4024	;# 
   181   000FB8                     BAUDCTL         equ	4024	;# 
   182   000FBA                     CCP2CON         equ	4026	;# 
   183   000FBB                     CCPR2           equ	4027	;# 
   184   000FBB                     CCPR2L          equ	4027	;# 
   185   000FBC                     CCPR2H          equ	4028	;# 
   186   000FBD                     CCP1CON         equ	4029	;# 
   187   000FBD                     ECCP1CON        equ	4029	;# 
   188   000FBE                     CCPR1           equ	4030	;# 
   189   000FBE                     CCPR1L          equ	4030	;# 
   190   000FBF                     CCPR1H          equ	4031	;# 
   191   000FC0                     ADCON2          equ	4032	;# 
   192   000FC1                     ADCON1          equ	4033	;# 
   193   000FC2                     ADCON0          equ	4034	;# 
   194   000FC3                     ADRES           equ	4035	;# 
   195   000FC3                     ADRESL          equ	4035	;# 
   196   000FC4                     ADRESH          equ	4036	;# 
   197   000FC5                     SSPCON2         equ	4037	;# 
   198   000FC6                     SSPCON1         equ	4038	;# 
   199   000FC7                     SSPSTAT         equ	4039	;# 
   200   000FC8                     SSPADD          equ	4040	;# 
   201   000FC9                     SSPBUF          equ	4041	;# 
   202   000FCA                     T2CON           equ	4042	;# 
   203   000FCB                     PR2             equ	4043	;# 
   204   000FCB                     MEMCON          equ	4043	;# 
   205   000FCC                     TMR2            equ	4044	;# 
   206   000FCD                     T1CON           equ	4045	;# 
   207   000FCE                     TMR1            equ	4046	;# 
   208   000FCE                     TMR1L           equ	4046	;# 
   209   000FCF                     TMR1H           equ	4047	;# 
   210   000FD0                     RCON            equ	4048	;# 
   211   000FD1                     WDTCON          equ	4049	;# 
   212   000FD2                     HLVDCON         equ	4050	;# 
   213   000FD2                     LVDCON          equ	4050	;# 
   214   000FD3                     OSCCON          equ	4051	;# 
   215   000FD5                     T0CON           equ	4053	;# 
   216   000FD6                     TMR0            equ	4054	;# 
   217   000FD6                     TMR0L           equ	4054	;# 
   218   000FD7                     TMR0H           equ	4055	;# 
   219   000FD8                     STATUS          equ	4056	;# 
   220   000FD9                     FSR2            equ	4057	;# 
   221   000FD9                     FSR2L           equ	4057	;# 
   222   000FDA                     FSR2H           equ	4058	;# 
   223   000FDB                     PLUSW2          equ	4059	;# 
   224   000FDC                     PREINC2         equ	4060	;# 
   225   000FDD                     POSTDEC2        equ	4061	;# 
   226   000FDE                     POSTINC2        equ	4062	;# 
   227   000FDF                     INDF2           equ	4063	;# 
   228   000FE0                     BSR             equ	4064	;# 
   229   000FE1                     FSR1            equ	4065	;# 
   230   000FE1                     FSR1L           equ	4065	;# 
   231   000FE2                     FSR1H           equ	4066	;# 
   232   000FE3                     PLUSW1          equ	4067	;# 
   233   000FE4                     PREINC1         equ	4068	;# 
   234   000FE5                     POSTDEC1        equ	4069	;# 
   235   000FE6                     POSTINC1        equ	4070	;# 
   236   000FE7                     INDF1           equ	4071	;# 
   237   000FE8                     WREG            equ	4072	;# 
   238   000FE9                     FSR0            equ	4073	;# 
   239   000FE9                     FSR0L           equ	4073	;# 
   240   000FEA                     FSR0H           equ	4074	;# 
   241   000FEB                     PLUSW0          equ	4075	;# 
   242   000FEC                     PREINC0         equ	4076	;# 
   243   000FED                     POSTDEC0        equ	4077	;# 
   244   000FEE                     POSTINC0        equ	4078	;# 
   245   000FEF                     INDF0           equ	4079	;# 
   246   000FF0                     INTCON3         equ	4080	;# 
   247   000FF1                     INTCON2         equ	4081	;# 
   248   000FF2                     INTCON          equ	4082	;# 
   249   000FF3                     PROD            equ	4083	;# 
   250   000FF3                     PRODL           equ	4083	;# 
   251   000FF4                     PRODH           equ	4084	;# 
   252   000FF5                     TABLAT          equ	4085	;# 
   253   000FF6                     TBLPTR          equ	4086	;# 
   254   000FF6                     TBLPTRL         equ	4086	;# 
   255   000FF7                     TBLPTRH         equ	4087	;# 
   256   000FF8                     TBLPTRU         equ	4088	;# 
   257   000FF9                     PCLAT           equ	4089	;# 
   258   000FF9                     PC              equ	4089	;# 
   259   000FF9                     PCL             equ	4089	;# 
   260   000FFA                     PCLATH          equ	4090	;# 
   261   000FFB                     PCLATU          equ	4091	;# 
   262   000FFC                     STKPTR          equ	4092	;# 
   263   000FFD                     TOS             equ	4093	;# 
   264   000FFD                     TOSL            equ	4093	;# 
   265   000FFE                     TOSH            equ	4094	;# 
   266   000FFF                     TOSU            equ	4095	;# 
   267   000FFD                     _TOS            set	4093
   268   000FFC                     _STKPTR         set	4092
   269   000F83                     _PORTDbits      set	3971
   270   000F8C                     _LATDbits       set	3980
   271   000F95                     _TRISDbits      set	3989
   272   000FD6                     _TMR0L          set	4054
   273   000FD5                     _T0CONbits      set	4053
   274   000FF2                     _INTCONbits     set	4082
   275                           
   276                           ; #config settings
   277                           
   278                           	psect	cinit
   279   000A34                     __pcinit:
   280                           	callstack 0
   281   000A34                     start_initialization:
   282                           	callstack 0
   283   000A34                     __initialization:
   284                           	callstack 0
   285                           
   286                           ; Clear objects allocated to COMRAM (19 bytes)
   287   000A34  EE00  F001         	lfsr	0,__pbssCOMRAM
   288   000A38  0E13               	movlw	19
   289   000A3A                     clear_0:
   290   000A3A  6AEE               	clrf	postinc0,c
   291   000A3C  06E8               	decf	wreg,f,c
   292   000A3E  E1FD               	bnz	clear_0
   293   000A40                     end_of_initialization:
   294                           	callstack 0
   295   000A40                     __end_of__initialization:
   296                           	callstack 0
   297   000A40  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298   000A42  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299   000A44  0100               	movlb	0
   300   000A46  EF01  F004         	goto	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMRAM
   303   000001                     __pbssCOMRAM:
   304                           	callstack 0
   305   000001                     _f_aptos:
   306                           	callstack 0
   307   000001                     	ds	15
   308   000010                     _qtd_tasks:
   309                           	callstack 0
   310   000010                     	ds	2
   311   000012                     _vez:
   312                           	callstack 0
   313   000012                     	ds	2
   314                           
   315                           	psect	cstackCOMRAM
   316   000014                     __pcstackCOMRAM:
   317                           	callstack 0
   318   000014                     ?___lwmod:
   319                           	callstack 0
   320   000014                     ___lwmod@dividend:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x0
   324   000014                     	ds	2
   325   000016                     ___lwmod@divisor:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x2
   329   000016                     	ds	2
   330   000018                     ___lwmod@counter:
   331                           	callstack 0
   332   000018                     
   333                           ; 1 bytes @ 0x4
   334   000018                     	ds	1
   335   000019                     ??_ISR_TIMER:
   336                           
   337                           ; 1 bytes @ 0x5
   338   000019                     	ds	9
   339   000022                     ??_task_1:
   340                           
   341                           ; 1 bytes @ 0xE
   342   000022                     	ds	1
   343   000023                     ??_task_2:
   344                           
   345                           ; 1 bytes @ 0xF
   346   000023                     	ds	1
   347   000024                     ??_task_3:
   348                           
   349                           ; 1 bytes @ 0x10
   350   000024                     	ds	1
   351   000025                     
   352                           ; 1 bytes @ 0x11
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 32 in file "main.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  2   36[None  ] int 
   365 ;; Registers used:
   366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   372 ;;      Params:         0       0       0       0       0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels required when called: 4
   378 ;; This function calls:
   379 ;;		_config_ports
   380 ;;		_config_timer
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text0
   387   000802                     __ptext0:
   388                           	callstack 0
   389   000802                     _main:
   390                           	callstack 27
   391   000802                     
   392                           ;main.c: 34:     config_timer();
   393   000802  EC0D  F005         	call	_config_timer	;wreg free
   394   000806                     
   395                           ;main.c: 35:     config_ports();
   396   000806  EC25  F005         	call	_config_ports	;wreg free
   397   00080A                     
   398                           ;main.c: 38:     f_aptos[qtd_tasks].id = 1;
   399   00080A  5010               	movf	_qtd_tasks^0,w,c
   400   00080C  0D05               	mullw	5
   401   00080E  50F3               	movf	243,w,c
   402   000810  0F01               	addlw	low _f_aptos
   403   000812  6ED9               	movwf	fsr2l,c
   404   000814  6ADA               	clrf	fsr2h,c
   405   000816  0E01               	movlw	1
   406   000818  6EDE               	movwf	postinc2,c
   407   00081A  0E00               	movlw	0
   408   00081C  6EDD               	movwf	postdec2,c
   409   00081E                     
   410                           ;main.c: 39:     f_aptos[qtd_tasks].func = task_1;
   411   00081E  5010               	movf	_qtd_tasks^0,w,c
   412   000820  0D05               	mullw	5
   413   000822  50F3               	movf	243,w,c
   414   000824  0F03               	addlw	low (_f_aptos+2)
   415   000826  6ED9               	movwf	fsr2l,c
   416   000828  6ADA               	clrf	fsr2h,c
   417   00082A  0EF4               	movlw	low _task_1
   418   00082C  6EDE               	movwf	postinc2,c
   419   00082E  0E09               	movlw	high _task_1
   420   000830  6EDD               	movwf	postdec2,c
   421   000832                     
   422                           ;main.c: 40:     f_aptos[qtd_tasks++].task_state = READY;
   423   000832  5010               	movf	_qtd_tasks^0,w,c
   424   000834  0D05               	mullw	5
   425   000836  50F3               	movf	243,w,c
   426   000838  0F05               	addlw	low (_f_aptos+4)
   427   00083A  6ED9               	movwf	fsr2l,c
   428   00083C  6ADA               	clrf	fsr2h,c
   429   00083E  6ADF               	clrf	indf2,c
   430   000840  4A10               	infsnz	_qtd_tasks^0,f,c
   431   000842  2A11               	incf	(_qtd_tasks+1)^0,f,c
   432   000844                     
   433                           ;main.c: 42:     f_aptos[qtd_tasks].id = 2;
   434   000844  5010               	movf	_qtd_tasks^0,w,c
   435   000846  0D05               	mullw	5
   436   000848  50F3               	movf	243,w,c
   437   00084A  0F01               	addlw	low _f_aptos
   438   00084C  6ED9               	movwf	fsr2l,c
   439   00084E  6ADA               	clrf	fsr2h,c
   440   000850  0E02               	movlw	2
   441   000852  6EDE               	movwf	postinc2,c
   442   000854  0E00               	movlw	0
   443   000856  6EDD               	movwf	postdec2,c
   444   000858                     
   445                           ;main.c: 43:     f_aptos[qtd_tasks].func = task_2;
   446   000858  5010               	movf	_qtd_tasks^0,w,c
   447   00085A  0D05               	mullw	5
   448   00085C  50F3               	movf	243,w,c
   449   00085E  0F03               	addlw	low (_f_aptos+2)
   450   000860  6ED9               	movwf	fsr2l,c
   451   000862  6ADA               	clrf	fsr2h,c
   452   000864  0ECC               	movlw	low _task_2
   453   000866  6EDE               	movwf	postinc2,c
   454   000868  0E09               	movlw	high _task_2
   455   00086A  6EDD               	movwf	postdec2,c
   456   00086C                     
   457                           ;main.c: 44:     f_aptos[qtd_tasks++].task_state = READY;
   458   00086C  5010               	movf	_qtd_tasks^0,w,c
   459   00086E  0D05               	mullw	5
   460   000870  50F3               	movf	243,w,c
   461   000872  0F05               	addlw	low (_f_aptos+4)
   462   000874  6ED9               	movwf	fsr2l,c
   463   000876  6ADA               	clrf	fsr2h,c
   464   000878  6ADF               	clrf	indf2,c
   465   00087A  4A10               	infsnz	_qtd_tasks^0,f,c
   466   00087C  2A11               	incf	(_qtd_tasks+1)^0,f,c
   467   00087E                     
   468                           ;main.c: 46:     f_aptos[qtd_tasks].id = 3;
   469   00087E  5010               	movf	_qtd_tasks^0,w,c
   470   000880  0D05               	mullw	5
   471   000882  50F3               	movf	243,w,c
   472   000884  0F01               	addlw	low _f_aptos
   473   000886  6ED9               	movwf	fsr2l,c
   474   000888  6ADA               	clrf	fsr2h,c
   475   00088A  0E03               	movlw	3
   476   00088C  6EDE               	movwf	postinc2,c
   477   00088E  0E00               	movlw	0
   478   000890  6EDD               	movwf	postdec2,c
   479   000892                     
   480                           ;main.c: 47:     f_aptos[qtd_tasks].func = task_3;
   481   000892  5010               	movf	_qtd_tasks^0,w,c
   482   000894  0D05               	mullw	5
   483   000896  50F3               	movf	243,w,c
   484   000898  0F03               	addlw	low (_f_aptos+2)
   485   00089A  6ED9               	movwf	fsr2l,c
   486   00089C  6ADA               	clrf	fsr2h,c
   487   00089E  0EA2               	movlw	low _task_3
   488   0008A0  6EDE               	movwf	postinc2,c
   489   0008A2  0E09               	movlw	high _task_3
   490   0008A4  6EDD               	movwf	postdec2,c
   491   0008A6                     
   492                           ;main.c: 48:     f_aptos[qtd_tasks++].task_state = READY;
   493   0008A6  5010               	movf	_qtd_tasks^0,w,c
   494   0008A8  0D05               	mullw	5
   495   0008AA  50F3               	movf	243,w,c
   496   0008AC  0F05               	addlw	low (_f_aptos+4)
   497   0008AE  6ED9               	movwf	fsr2l,c
   498   0008B0  6ADA               	clrf	fsr2h,c
   499   0008B2  6ADF               	clrf	indf2,c
   500   0008B4  4A10               	infsnz	_qtd_tasks^0,f,c
   501   0008B6  2A11               	incf	(_qtd_tasks+1)^0,f,c
   502   0008B8                     
   503                           ;main.c: 51:     (INTCONbits.GIE = 1) // Interrupts of Hi/Lo Priority or Peripheral inte
      +                          rrupts;
   504   0008B8  8EF2               	bsf	242,7,c	;volatile
   505   0008BA                     l37:
   506   0008BA  EF5D  F004         	goto	l37
   507   0008BE  EF07  F000         	goto	start
   508   0008C2                     __end_of_main:
   509                           	callstack 0
   510                           
   511 ;; *************** function _config_timer *****************
   512 ;; Defined at:
   513 ;;		line 59 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   527 ;;      Params:         0       0       0       0       0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; Hardware stack levels required when called: 3
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text1
   542   000A1A                     __ptext1:
   543                           	callstack 0
   544   000A1A                     _config_timer:
   545                           	callstack 27
   546   000A1A                     
   547                           ;main.c: 61:     T0CONbits.T0CS = 0;
   548   000A1A  9AD5               	bcf	213,5,c	;volatile
   549                           
   550                           ;main.c: 62:     T0CONbits.PSA = 0;
   551   000A1C  96D5               	bcf	213,3,c	;volatile
   552   000A1E                     
   553                           ;main.c: 63:     T0CONbits.T0PS = 0b110; // 1:128
   554   000A1E  50D5               	movf	213,w,c	;volatile
   555   000A20  0BF8               	andlw	-8
   556   000A22  0906               	iorlw	6
   557   000A24  6ED5               	movwf	213,c	;volatile
   558   000A26                     
   559                           ;main.c: 64:     INTCONbits.TMR0IE = 1;
   560   000A26  8AF2               	bsf	242,5,c	;volatile
   561   000A28                     
   562                           ;main.c: 65:     INTCONbits.TMR0IF = 0;
   563   000A28  94F2               	bcf	242,2,c	;volatile
   564   000A2A                     
   565                           ;main.c: 66:     INTCONbits.PEIE = 1;
   566   000A2A  8CF2               	bsf	242,6,c	;volatile
   567                           
   568                           ;main.c: 67:     TMR0L = 10;
   569   000A2C  0E0A               	movlw	10
   570   000A2E  6ED6               	movwf	214,c	;volatile
   571   000A30                     
   572                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   573   000A30  8ED5               	bsf	213,7,c	;volatile
   574   000A32  0012               	return		;funcret
   575   000A34                     __end_of_config_timer:
   576                           	callstack 0
   577                           
   578 ;; *************** function _config_ports *****************
   579 ;; Defined at:
   580 ;;		line 71 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		None
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   594 ;;      Params:         0       0       0       0       0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 3
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text2
   609   000A4A                     __ptext2:
   610                           	callstack 0
   611   000A4A                     _config_ports:
   612                           	callstack 27
   613   000A4A                     
   614                           ;main.c: 73:     TRISDbits.RD0 = 0;
   615   000A4A  9095               	bcf	149,0,c	;volatile
   616                           
   617                           ;main.c: 74:     TRISDbits.RD1 = 0;
   618   000A4C  9295               	bcf	149,1,c	;volatile
   619                           
   620                           ;main.c: 75:     TRISDbits.RD2 = 0;
   621   000A4E  9495               	bcf	149,2,c	;volatile
   622   000A50  0012               	return		;funcret
   623   000A52                     __end_of_config_ports:
   624                           	callstack 0
   625                           
   626 ;; *************** function _task_1 *****************
   627 ;; Defined at:
   628 ;;		line 79 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         0       0       0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0
   644 ;;      Temps:          1       0       0       0       0       0       0       0       0
   645 ;;      Totals:         1       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        1 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 2
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657   0009F4                     __ptext3:
   658                           	callstack 0
   659   0009F4                     _task_1:
   660                           	callstack 27
   661   0009F4                     l49:
   662   0009F4                     
   663                           ;main.c: 82:         LATDbits.LD0 = ~PORTDbits.RD0;
   664   0009F4  B083               	btfsc	131,0,c	;volatile
   665   0009F6  EFFF  F004         	goto	u4_21
   666   0009FA  EF02  F005         	goto	u4_20
   667   0009FE                     u4_21:
   668   0009FE  0E01               	movlw	1
   669   000A00  EF03  F005         	goto	u4_26
   670   000A04                     u4_20:
   671   000A04  0E00               	movlw	0
   672   000A06                     u4_26:
   673   000A06  0AFF               	xorlw	255
   674   000A08  6E22               	movwf	??_task_1^0,c
   675   000A0A  508C               	movf	140,w,c	;volatile
   676   000A0C  1822               	xorwf	??_task_1^0,w,c
   677   000A0E  0BFE               	andlw	-2
   678   000A10  1822               	xorwf	??_task_1^0,w,c
   679   000A12  6E8C               	movwf	140,c	;volatile
   680   000A14  EFFA  F004         	goto	l49
   681   000A18  0012               	return		;funcret
   682   000A1A                     __end_of_task_1:
   683                           	callstack 0
   684                           
   685 ;; *************** function _task_2 *****************
   686 ;; Defined at:
   687 ;;		line 86 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0
   703 ;;      Temps:          1       0       0       0       0       0       0       0       0
   704 ;;      Totals:         1       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        1 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 2
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text4
   716   0009CC                     __ptext4:
   717                           	callstack 0
   718   0009CC                     _task_2:
   719                           	callstack 27
   720   0009CC                     l55:
   721   0009CC                     
   722                           ;main.c: 89:         LATDbits.LD1 = ~PORTDbits.RD1;
   723   0009CC  B283               	btfsc	131,1,c	;volatile
   724   0009CE  EFEB  F004         	goto	u5_21
   725   0009D2  EFEE  F004         	goto	u5_20
   726   0009D6                     u5_21:
   727   0009D6  0E01               	movlw	1
   728   0009D8  EFEF  F004         	goto	u5_26
   729   0009DC                     u5_20:
   730   0009DC  0E00               	movlw	0
   731   0009DE                     u5_26:
   732   0009DE  0AFF               	xorlw	255
   733   0009E0  6E23               	movwf	??_task_2^0,c
   734   0009E2  4623               	rlncf	??_task_2^0,f,c
   735   0009E4  508C               	movf	140,w,c	;volatile
   736   0009E6  1823               	xorwf	??_task_2^0,w,c
   737   0009E8  0BFD               	andlw	-3
   738   0009EA  1823               	xorwf	??_task_2^0,w,c
   739   0009EC  6E8C               	movwf	140,c	;volatile
   740   0009EE  EFE6  F004         	goto	l55
   741   0009F2  0012               	return		;funcret
   742   0009F4                     __end_of_task_2:
   743                           	callstack 0
   744                           
   745 ;; *************** function _task_3 *****************
   746 ;; Defined at:
   747 ;;		line 93 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   761 ;;      Params:         0       0       0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0
   763 ;;      Temps:          1       0       0       0       0       0       0       0       0
   764 ;;      Totals:         1       0       0       0       0       0       0       0       0
   765 ;;Total ram usage:        1 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 2
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text5
   776   0009A2                     __ptext5:
   777                           	callstack 0
   778   0009A2                     _task_3:
   779                           	callstack 27
   780   0009A2                     l61:
   781   0009A2                     
   782                           ;main.c: 96:         LATDbits.LD2 = ~PORTDbits.RD2;
   783   0009A2  B483               	btfsc	131,2,c	;volatile
   784   0009A4  EFD6  F004         	goto	u6_21
   785   0009A8  EFD9  F004         	goto	u6_20
   786   0009AC                     u6_21:
   787   0009AC  0E01               	movlw	1
   788   0009AE  EFDA  F004         	goto	u6_26
   789   0009B2                     u6_20:
   790   0009B2  0E00               	movlw	0
   791   0009B4                     u6_26:
   792   0009B4  0AFF               	xorlw	255
   793   0009B6  6E24               	movwf	??_task_3^0,c
   794   0009B8  4624               	rlncf	??_task_3^0,f,c
   795   0009BA  4624               	rlncf	??_task_3^0,f,c
   796   0009BC  508C               	movf	140,w,c	;volatile
   797   0009BE  1824               	xorwf	??_task_3^0,w,c
   798   0009C0  0BFB               	andlw	-5
   799   0009C2  1824               	xorwf	??_task_3^0,w,c
   800   0009C4  6E8C               	movwf	140,c	;volatile
   801   0009C6  EFD1  F004         	goto	l61
   802   0009CA  0012               	return		;funcret
   803   0009CC                     __end_of_task_3:
   804                           	callstack 0
   805                           
   806 ;; *************** function _ISR_TIMER *****************
   807 ;; Defined at:
   808 ;;		line 101 in file "main.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   822 ;;      Params:         0       0       0       0       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0
   824 ;;      Temps:          6       0       0       0       0       0       0       0       0
   825 ;;      Totals:         6       0       0       0       0       0       0       0       0
   826 ;;Total ram usage:        6 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 1
   829 ;; This function calls:
   830 ;;		___lwmod
   831 ;; This function is called by:
   832 ;;		Interrupt level 2
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	intcode
   837   000008                     __pintcode:
   838                           	callstack 0
   839   000008                     _ISR_TIMER:
   840                           	callstack 27
   841                           
   842                           ;incstack = 0
   843   000008  8225               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   844   00000A  ED61  F004         	call	int_func,f	;refresh shadow registers
   845                           
   846                           	psect	intcode_body
   847   0008C2                     __pintcode_body:
   848                           	callstack 27
   849   0008C2                     int_func:
   850                           	callstack 27
   851   0008C2  0006               	pop		; remove dummy address from shadow register refresh
   852   0008C4  CFD9 F01B          	movff	fsr2l,??_ISR_TIMER+2
   853   0008C8  CFDA F01C          	movff	fsr2h,??_ISR_TIMER+3
   854   0008CC  CFF3 F01D          	movff	prodl,??_ISR_TIMER+4
   855   0008D0  CFF4 F01E          	movff	prodh,??_ISR_TIMER+5
   856   0008D4                     
   857                           ;main.c: 103:     if (INTCONbits.TMR0IF == 1) {
   858   0008D4  A4F2               	btfss	242,2,c	;volatile
   859   0008D6  EF6F  F004         	goto	i2u11_41
   860   0008DA  EF71  F004         	goto	i2u11_40
   861   0008DE                     i2u11_41:
   862   0008DE  EF95  F004         	goto	i2l70
   863   0008E2                     i2u11_40:
   864   0008E2                     
   865                           ;main.c: 104:         INTCONbits.TMR0IF = 0;
   866   0008E2  94F2               	bcf	242,2,c	;volatile
   867   0008E4                     
   868                           ;main.c: 105:         TMR0L = 10;
   869   0008E4  0E0A               	movlw	10
   870   0008E6  6ED6               	movwf	214,c	;volatile
   871   0008E8                     
   872                           ;main.c: 107:         STKPTR = 0;
   873   0008E8  6AFC               	clrf	252,c	;volatile
   874   0008EA  0005               	push		;# 
   875   0008EC                     
   876                           ;main.c: 110:         TOS = (uint24_t)f_aptos[vez].func;
   877   0008EC  5012               	movf	_vez^0,w,c
   878   0008EE  0D05               	mullw	5
   879   0008F0  50F3               	movf	243,w,c
   880   0008F2  0F03               	addlw	low (_f_aptos+2)
   881   0008F4  6ED9               	movwf	fsr2l,c
   882   0008F6  6ADA               	clrf	fsr2h,c
   883   0008F8  CFDE F019          	movff	postinc2,??_ISR_TIMER
   884   0008FC  CFDD F01A          	movff	postdec2,??_ISR_TIMER+1
   885   000900  C019  FFFD         	movff	??_ISR_TIMER,tosl	;volatile
   886   000904  C01A  FFFE         	movff	??_ISR_TIMER+1,tosh	;volatile
   887   000908  6AFF               	clrf	255,c	;volatile
   888   00090A                     
   889                           ;main.c: 112:         vez = (vez+1) % 3;
   890   00090A  0E01               	movlw	1
   891   00090C  2412               	addwf	_vez^0,w,c
   892   00090E  6E14               	movwf	___lwmod@dividend^0,c
   893   000910  0E00               	movlw	0
   894   000912  2013               	addwfc	(_vez+1)^0,w,c
   895   000914  6E15               	movwf	(___lwmod@dividend+1)^0,c
   896   000916  0E00               	movlw	0
   897   000918  6E17               	movwf	(___lwmod@divisor+1)^0,c
   898   00091A  0E03               	movlw	3
   899   00091C  6E16               	movwf	___lwmod@divisor^0,c
   900   00091E  EC9F  F004         	call	___lwmod	;wreg free
   901   000922  C014  F012         	movff	?___lwmod,_vez
   902   000926  C015  F013         	movff	?___lwmod+1,_vez+1
   903   00092A                     i2l70:
   904   00092A  C01E  FFF4         	movff	??_ISR_TIMER+5,prodh
   905   00092E  C01D  FFF3         	movff	??_ISR_TIMER+4,prodl
   906   000932  C01C  FFDA         	movff	??_ISR_TIMER+3,fsr2h
   907   000936  C01B  FFD9         	movff	??_ISR_TIMER+2,fsr2l
   908   00093A  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   909   00093C  0011               	retfie		f
   910   00093E                     __end_of_ISR_TIMER:
   911                           	callstack 0
   912                           
   913 ;; *************** function ___lwmod *****************
   914 ;; Defined at:
   915 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  dividend        2    0[COMRAM] unsigned int 
   918 ;;  divisor         2    2[COMRAM] unsigned int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  counter         1    4[COMRAM] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2    0[COMRAM] unsigned int 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   930 ;;      Params:         4       0       0       0       0       0       0       0       0
   931 ;;      Locals:         1       0       0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0
   933 ;;      Totals:         5       0       0       0       0       0       0       0       0
   934 ;;Total ram usage:        5 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_ISR_TIMER
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text7
   944   00093E                     __ptext7:
   945                           	callstack 0
   946   00093E                     ___lwmod:
   947                           	callstack 27
   948   00093E  5016               	movf	___lwmod@divisor^0,w,c
   949   000940  1017               	iorwf	(___lwmod@divisor+1)^0,w,c
   950   000942  B4D8               	btfsc	status,2,c
   951   000944  EFA6  F004         	goto	i2u8_41
   952   000948  EFA8  F004         	goto	i2u8_40
   953   00094C                     i2u8_41:
   954   00094C  EFCC  F004         	goto	i2l574
   955   000950                     i2u8_40:
   956   000950  0E01               	movlw	1
   957   000952  6E18               	movwf	___lwmod@counter^0,c
   958   000954  EFB0  F004         	goto	i2l830
   959   000958                     i2l828:
   960   000958  90D8               	bcf	status,0,c
   961   00095A  3616               	rlcf	___lwmod@divisor^0,f,c
   962   00095C  3617               	rlcf	(___lwmod@divisor+1)^0,f,c
   963   00095E  2A18               	incf	___lwmod@counter^0,f,c
   964   000960                     i2l830:
   965   000960  AE17               	btfss	(___lwmod@divisor+1)^0,7,c
   966   000962  EFB5  F004         	goto	i2u9_41
   967   000966  EFB7  F004         	goto	i2u9_40
   968   00096A                     i2u9_41:
   969   00096A  EFAC  F004         	goto	i2l828
   970   00096E                     i2u9_40:
   971   00096E                     i2l832:
   972   00096E  5016               	movf	___lwmod@divisor^0,w,c
   973   000970  5C14               	subwf	___lwmod@dividend^0,w,c
   974   000972  5017               	movf	(___lwmod@divisor+1)^0,w,c
   975   000974  5815               	subwfb	(___lwmod@dividend+1)^0,w,c
   976   000976  A0D8               	btfss	status,0,c
   977   000978  EFC0  F004         	goto	i2u10_41
   978   00097C  EFC2  F004         	goto	i2u10_40
   979   000980                     i2u10_41:
   980   000980  EFC6  F004         	goto	i2l836
   981   000984                     i2u10_40:
   982   000984  5016               	movf	___lwmod@divisor^0,w,c
   983   000986  5E14               	subwf	___lwmod@dividend^0,f,c
   984   000988  5017               	movf	(___lwmod@divisor+1)^0,w,c
   985   00098A  5A15               	subwfb	(___lwmod@dividend+1)^0,f,c
   986   00098C                     i2l836:
   987   00098C  90D8               	bcf	status,0,c
   988   00098E  3217               	rrcf	(___lwmod@divisor+1)^0,f,c
   989   000990  3216               	rrcf	___lwmod@divisor^0,f,c
   990   000992  2E18               	decfsz	___lwmod@counter^0,f,c
   991   000994  EFB7  F004         	goto	i2l832
   992   000998                     i2l574:
   993   000998  C014  F014         	movff	___lwmod@dividend,?___lwmod
   994   00099C  C015  F015         	movff	___lwmod@dividend+1,?___lwmod+1
   995   0009A0  0012               	return		;funcret
   996   0009A2                     __end_of___lwmod:
   997                           	callstack 0
   998                           
   999                           	psect	smallconst
  1000   000800                     __psmallconst:
  1001                           	callstack 0
  1002   000800  00                 	db	0
  1003   000801  00                 	db	0	; dummy byte at the end
  1004   000800                     __smallconst    set	__psmallconst
  1005   000800                     __mediumconst   set	__psmallconst
  1006   000000                     __activetblptr  equ	0
  1007                           
  1008                           	psect	rparam
  1009   000001                     ___rparam_used  equ	1
  1010   000000                     ___param_bank   equ	0
  1011   000000                     __Lparam        equ	__Lrparam
  1012   000000                     __Hparam        equ	__Hrparam
  1013                           
  1014                           	psect	temp
  1015   000025                     btemp:
  1016                           	callstack 0
  1017   000025                     	ds	1
  1018   000025                     int$flags       set	btemp
  1019   000026                     wtemp8          set	btemp+1
  1020   000026                     ttemp5          set	btemp+1
  1021   000029                     ttemp6          set	btemp+4
  1022   00002D                     ttemp7          set	btemp+8
  1023                           tosu	equ	0xFFF
  1024                           tosh	equ	0xFFE
  1025                           tosl	equ	0xFFD
  1026                           stkptr	equ	0xFFC
  1027                           pclatu	equ	0xFFB
  1028                           pclath	equ	0xFFA
  1029                           pcl	equ	0xFF9
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           prodh	equ	0xFF4
  1035                           prodl	equ	0xFF3
  1036                           indf0	equ	0xFEF
  1037                           postinc0	equ	0xFEE
  1038                           postdec0	equ	0xFED
  1039                           preinc0	equ	0xFEC
  1040                           plusw0	equ	0xFEB
  1041                           fsr0h	equ	0xFEA
  1042                           fsr0l	equ	0xFE9
  1043                           wreg	equ	0xFE8
  1044                           indf1	equ	0xFE7
  1045                           postinc1	equ	0xFE6
  1046                           postdec1	equ	0xFE5
  1047                           preinc1	equ	0xFE4
  1048                           plusw1	equ	0xFE3
  1049                           fsr1h	equ	0xFE2
  1050                           fsr1l	equ	0xFE1
  1051                           bsr	equ	0xFE0
  1052                           indf2	equ	0xFDF
  1053                           postinc2	equ	0xFDE
  1054                           postdec2	equ	0xFDD
  1055                           preinc2	equ	0xFDC
  1056                           plusw2	equ	0xFDB
  1057                           fsr2h	equ	0xFDA
  1058                           fsr2l	equ	0xFD9
  1059                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f_aptos$func	PTR FTN()void  size(2) Largest target is 1
		 -> task_1(), task_2(), task_3(), 

    S29tcb$func	PTR FTN()void  size(2) Largest target is 1
		 -> task_1(), task_2(), task_3(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    None.

Critical Paths under _ISR_TIMER in COMRAM

    _ISR_TIMER->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_3 in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_3 in BANK0

    None.

Critical Paths under _ISR_TIMER in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_3 in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_3 in BANK1

    None.

Critical Paths under _ISR_TIMER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _ISR_TIMER in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _ISR_TIMER in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _ISR_TIMER in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _ISR_TIMER in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _task_1 in BANK6

    None.

Critical Paths under _task_2 in BANK6

    None.

Critical Paths under _task_3 in BANK6

    None.

Critical Paths under _task_1 in BANK6

    None.

Critical Paths under _task_2 in BANK6

    None.

Critical Paths under _task_3 in BANK6

    None.

Critical Paths under _ISR_TIMER in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _task_1 in BANK7

    None.

Critical Paths under _task_2 in BANK7

    None.

Critical Paths under _task_3 in BANK7

    None.

Critical Paths under _task_1 in BANK7

    None.

Critical Paths under _task_2 in BANK7

    None.

Critical Paths under _task_3 in BANK7

    None.

Critical Paths under _ISR_TIMER in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _config_ports
                       _config_timer
 ---------------------------------------------------------------------------------
 (1) _config_timer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ports                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _task_1                                               1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _task_2                                               1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _task_3                                               1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _task_1                                               1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _task_2                                               1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _task_3                                               1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_TIMER                                            6     6      0     161
                                              5 COMRAM     6     6      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     161
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ports
   _config_timer

 _task_1 (ROOT)

 _task_2 (ROOT)

 _task_3 (ROOT)

 _task_1 (ROOT)

 _task_2 (ROOT)

 _task_3 (ROOT)

 _ISR_TIMER (ROOT)
   ___lwmod

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         112      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     17      36     38.3%
BITBIGSFRll         35      0       0      0.0%
BITBIGSFRlh          8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      36      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Aug 27 07:58:39 2025

                     l43 0A32                       l61 09A2                       l37 08BA  
                     l46 0A50                       l38 08BA                       l55 09CC  
                     l49 09F4                      l800 08A6                      l810 09A2  
                    l802 08B4                      l804 08B8                      l806 09F4  
                    l750 0A26                      l808 09CC                      l752 0A28  
                    l754 0A2A                      l746 0A1A                      l756 0A30  
                    l748 0A1E                      l780 080A                      l758 0A4A  
                    l790 0858                      l782 081E                      l792 086C  
                    l784 0832                      l776 0802                      l794 087A  
                    l786 0840                      l778 0806                      l796 087E  
                    l788 0844                      l798 0892                      _TOS 0FFD  
                    _vez 0012                      wreg 0FE8                     i2l70 092A  
                   u4_20 0A04                     u4_21 09FE                     u4_26 0A06  
                   u5_20 09DC                     u5_21 09D6                     u5_26 09DE  
                   u6_20 09B2                     u6_21 09AC                     u6_26 09B4  
                   _main 0802                     fsr2h 0FDA                     indf2 0FDF  
                   fsr2l 0FD9                     btemp 0025                     prodh 0FF4  
                   prodl 0FF3                     start 000E           ??_config_timer 0025  
         ??_config_ports 0025             ___param_bank 0000                    ?_main 0014  
        __end_of___lwmod 09A2                    i2l581 09A0                    i2l830 0960  
                  i2l574 0998                    i2l832 096E                    i2l824 093E  
                  i2l840 08D4                    i2l834 0984                    i2l826 0950  
                  i2l850 090A                    i2l842 08E2                    i2l836 098C  
                  i2l828 0958                    i2l844 08E4                    i2l838 0992  
                  i2l846 08E8                    i2l848 08EC                    _TMR0L 0FD6  
                  ttemp5 0026                    ttemp6 0029                    ttemp7 002D  
                  status 0FD8                    wtemp8 0026          __initialization 0A34  
           __end_of_main 08C2                   ??_main 0025            __activetblptr 0000  
                 i2u8_40 0950                   i2u8_41 094C                   i2u9_40 096E  
                 i2u9_41 096A                   _STKPTR 0FFC        __end_of_ISR_TIMER 093E  
              ??___lwmod 0018                   clear_0 0A3A                   _task_1 09F4  
                 _task_2 09CC                   _task_3 09A2                   isa$std 0001  
   __end_of_config_timer 0A34             __mediumconst 0800     __end_of_config_ports 0A52  
             __accesstop 0060  __end_of__initialization 0A40            ___rparam_used 0001  
         __pcstackCOMRAM 0014                  ?_task_1 0014                  ?_task_2 0014  
                ?_task_3 0014                  i2u10_40 0984                  i2u10_41 0980  
                i2u11_40 08E2                  i2u11_41 08DE                  __Hparam 0000  
                __Lparam 0000                  ___lwmod 093E             __psmallconst 0800  
                _f_aptos 0001                  __pcinit 0A34                  __ramtop 0800  
                __ptext0 0802                  __ptext1 0A1A                  __ptext2 0A4A  
                __ptext3 09F4                  __ptext4 09CC                  __ptext5 09A2  
                __ptext7 093E                _T0CONbits 0FD5           __pintcode_body 08C2  
   end_of_initialization 0A40                  int_func 08C2             _config_timer 0A1A  
           _config_ports 0A4A                _ISR_TIMER 0008                  postdec2 0FDD  
                postinc0 0FEE                  postinc2 0FDE                _PORTDbits 0F83  
              _TRISDbits 0F95               ?_ISR_TIMER 0014           __end_of_task_1 0A1A  
         __end_of_task_2 09F4           __end_of_task_3 09CC      start_initialization 0A34  
               ??_task_1 0022                 ??_task_2 0023                 ??_task_3 0024  
            __pbssCOMRAM 0001              ??_ISR_TIMER 0019                __pintcode 0008  
               ?___lwmod 0014              __smallconst 0800                 _LATDbits 0F8C  
              _qtd_tasks 0010                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 int$flags 0025               _INTCONbits 0FF2  
               intlevel1 0000                 intlevel2 0000         ___lwmod@dividend 0014  
        ___lwmod@divisor 0016          ___lwmod@counter 0018            ?_config_timer 0014  
          ?_config_ports 0014  
